--- skk.c.orig	2017-08-14 09:07:27.000000000 +0900
+++ skk.c	2021-03-14 17:55:00.417717316 +0900
@@ -1291,15 +1291,15 @@
   int i, len;
 
   len = strlen(numstr);
-  mbstr = uim_malloc(len * 2 + 1);
+  mbstr = uim_malloc(len * 3 + 1);
 
   for (i = 0; i < len; i++) {
     if (method == 1)
-      strcpy(&mbstr[i * 2], wide_num_list[numstr[i] - '0']);
+      strcpy(&mbstr[i * 3], wide_num_list[numstr[i] - '0']);
     else
-      strcpy(&mbstr[i * 2], kanji_num_list[numstr[i] - '0']);
+      strcpy(&mbstr[i * 3], kanji_num_list[numstr[i] - '0']);
   }
-  mbstr[len * 2] = '\0';
+  mbstr[len * 3] = '\0';
 
   return mbstr;
 }
@@ -1316,14 +1316,14 @@
   if (len > 20) /* too big number */
     return uim_strdup(numstr);
 
-  mbstr = uim_malloc(len * 2 + 1);
-  mblen = len * 2;
+  mbstr = uim_malloc(len * 3 + 1);
+  mblen = len * 3;
 
   for (i = 0, j = 0; j < len; i++, j++) {
     position = len - j - 1;
     if (numstr[j] == '0') {
       i--;
-      mblen -= 2;
+      mblen -= 3;
       /* check zero at the head */
       if (j == 0) {
 	head_is_zero = 1;
@@ -1344,10 +1344,10 @@
 	  }
 	  if (use_position) {
 	    i++;
-	    mblen += 2;
-	    if (mblen > len * 2)
-	      mbstr = uim_realloc(mbstr, mblen + 2);
-	    strcpy(&mbstr[i * 2], kanji_num_position_list[position]);
+	    mblen += 3;
+	    if (mblen > len * 3)
+	      mbstr = uim_realloc(mbstr, mblen + 3);
+	    strcpy(&mbstr[i * 3], kanji_num_position_list[position]);
 	  }
 	}
       }
@@ -1367,11 +1367,11 @@
 	     (numstr[j + 1] == '0') &&
 	     (numstr[j + 2] == '0') &&
 	     (numstr[j + 3] == '0'))) {
-	  strcpy(&mbstr[i * 2], kanji_num_list[1]);
+	  strcpy(&mbstr[i * 3], kanji_num_list[1]);
 	} else {
 	  i--;
-	  mblen -= 2;
+	  mblen -= 3;
 	}
       } else {
-	strcpy(&mbstr[i * 2], kanji_num_list[numstr[j] - '0']);
+	strcpy(&mbstr[i * 3], kanji_num_list[numstr[j] - '0']);
       }

       /* add 十, 百, 千 for number whose place is exceeded 万 */
       if (position > 4) {
 	if ((position % 4) != 0) {
 	  i++;
-	  mblen += 2;
-	  if (mblen > len * 2)
-	    mbstr = uim_realloc(mbstr, mblen + 2);
-	  strcpy(&mbstr[i * 2], kanji_num_position_list[position % 4]);
+	  mblen += 3;
+	  if (mblen > len * 3)
+	    mbstr = uim_realloc(mbstr, mblen + 3);
+	  strcpy(&mbstr[i * 3], kanji_num_position_list[position % 4]);
 	}
       }
 
       /* add position */
       if (kanji_num_position_list[position]) {
 	i++;
-	mblen += 2;
-	if (mblen > len * 2)
-	  mbstr = uim_realloc(mbstr, mblen + 2);
-	strcpy(&mbstr[i * 2], kanji_num_position_list[position]);
+	mblen += 3;
+	if (mblen > len * 3)
+	  mbstr = uim_realloc(mbstr, mblen + 3);
+	strcpy(&mbstr[i * 3], kanji_num_position_list[position]);
       }
     }
   }
@@ -1401,7 +1401,7 @@
   /* in case of zero */
   if (head_is_zero) {
     strcpy(&mbstr[0], kanji_num_list[0]);
-    mblen = 2;
+    mblen = 3;
   }
 
   mbstr[mblen] = '\0';
@@ -1420,14 +1420,14 @@
   if (len > 20) /* too big number */
     return uim_strdup(numstr);
 
-  mbstr = uim_malloc(len * 2 + 1);
-  mblen = len * 2;
+  mbstr = uim_malloc(len * 3 + 1);
+  mblen = len * 3;
 
   for (i = 0, j = 0; j < len; i++, j++) {
     position = len - j - 1;
     if (numstr[j] == '0') {
       i--;
-      mblen -= 2;
+      mblen -= 3;
       /* check zero at the head */
       if (j == 0) {
 	head_is_zero = 1;
@@ -1448,10 +1448,10 @@
 	  }
 	  if (use_position) {
 	    i++;
-	    mblen += 2;
-	    if (mblen > len * 2)
-	      mbstr = uim_realloc(mbstr, mblen + 2);
-	    strcpy(&mbstr[i * 2], kanji_check_num_position_list[position]);
+	    mblen += 3;
+	    if (mblen > len * 3)
+	      mbstr = uim_realloc(mbstr, mblen + 3);
+	    strcpy(&mbstr[i * 3], kanji_check_num_position_list[position]);
 	  }
 	}
       }
@@ -1460,26 +1460,26 @@
 	head_is_zero = 0;
 
       /* replace numstr[j] with kanji number */
-      strcpy(&mbstr[i * 2], kanji_check_num_list[numstr[j] - '0']);
+      strcpy(&mbstr[i * 3], kanji_check_num_list[numstr[j] - '0']);
 
       /* add 拾, 百, 阡 for number whose place is exceeded 萬 */
       if (position > 4) {
 	if ((position % 4) != 0) {
 	  i++;
-	  mblen += 2;
-	  if (mblen > len * 2)
-	    mbstr = uim_realloc(mbstr, mblen + 2);
-	  strcpy(&mbstr[i * 2], kanji_check_num_position_list[position % 4]);
+	  mblen += 3;
+	  if (mblen > len * 3)
+	    mbstr = uim_realloc(mbstr, mblen + 3);
+	  strcpy(&mbstr[i * 3], kanji_check_num_position_list[position % 4]);
 	}
       }
 
       /* add position */
       if (kanji_check_num_position_list[position]) {
 	i++;
-	mblen += 2;
-	if (mblen > len * 2)
-	  mbstr = uim_realloc(mbstr, mblen + 2);
-	strcpy(&mbstr[i * 2], kanji_check_num_position_list[position]);
+	mblen += 3;
+	if (mblen > len * 3)
+	  mbstr = uim_realloc(mbstr, mblen + 3);
+	strcpy(&mbstr[i * 3], kanji_check_num_position_list[position]);
       }
     }
   }
@@ -1487,7 +1487,7 @@
   /* in case of zero */
   if (head_is_zero) {
     strcpy(&mbstr[0], kanji_check_num_list[0]);
-    mblen = 2;
+    mblen = 3;
   }
 
   mbstr[mblen] = '\0';
@@ -1504,10 +1504,10 @@
   if (len != 2) /* allow two digit number only */
     return uim_strdup(numstr);
 
-  mbstr = uim_malloc(5);
+  mbstr = uim_malloc(7);
   strcpy(&mbstr[0], wide_num_list[numstr[0] - '0']);
-  strcpy(&mbstr[2], kanji_num_list[numstr[1] - '0']);
-  mbstr[4] = '\0';
+  strcpy(&mbstr[3], kanji_num_list[numstr[1] - '0']);
+  mbstr[6] = '\0';
 
   return mbstr;
 }
