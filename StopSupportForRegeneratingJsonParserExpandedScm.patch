From 59c77571e7333192e086c7981de604865c7c4fc4 Mon Sep 17 00:00:00 2001
From: Sutou Kouhei <kou@clear-code.com>
Date: Fri, 19 Nov 2021 05:19:04 +0900
Subject: [PATCH] Stop support for regenerating scm/json-parser-expanded.scm

GitHub: fix GH-26

Because Chicken 4 or later doesn't support syntax-case. We can still
use bundled scm/json-parser-expanded.scm without support for
regenerating scm/json-parser-expanded.scm. But if we find a problem
with the current scm/json-parser-expanded.scm, we need to modify the
file directly or replace it with other implementation.

Reported by Reuben Thomas. Thanks!!!
---
 configure.ac                 | 1 -
 scm/Makefile.am              | 5 -----
 scm/json-parser-expanded.scm | 6 ++++++
 3 files changed, 6 insertions(+), 6 deletions(-)

diff --git a/configure.ac b/configure.ac
index 2caca519b..73d7e51ba 100644
--- a/configure.ac
+++ b/configure.ac
@@ -49,7 +49,6 @@ AC_DISABLE_STATIC
 AC_PROG_LIBTOOL
 AC_PATH_PROG(SH, sh)
 AC_PATH_PROG(RSVG, rsvg-convert)
-AC_PATH_PROG(CSI, csi)
 AC_PATH_PROGS(MD5, md5 md5sum)
 AC_PATH_PROGS(SHA1, sha1 sha1sum)
 AC_PATH_PROGS(SHA256, sha256 sha256sum)
diff --git a/scm/Makefile.am b/scm/Makefile.am
index 652286a03..9fba04c60 100644
--- a/scm/Makefile.am
+++ b/scm/Makefile.am
@@ -128,8 +128,3 @@ installed-modules.scm: $(SCM_FILES)
 	$(MAKE) $(AM_MAKEFLAGS) -C $(top_builddir)/uim uim-module-manager && \
 	$(UIM_MODULE_MANAGER_ENV) $(UIM_MODULE_MANAGER) \
 	    --path $(top_builddir)/scm --register $(module_names)
-
-json-parser-expanded.scm: macro-expander.scm json-parser-expander.scm packrat.scm.in
-	if test -n "$(CSI)"; then \
-	    $(CSI) -R syntax-case -q json-parser-expander.scm > json-parser-expanded.scm; \
-	fi
diff --git a/scm/json-parser-expanded.scm b/scm/json-parser-expanded.scm
index e090ef8dc..1de82436e 100644
--- a/scm/json-parser-expanded.scm
+++ b/scm/json-parser-expanded.scm
@@ -1,6 +1,12 @@
 ;; automatically generated from "json.scm.in"
 ;; see copyright notice in COPYING file
 
+;; Note that we can't regenerate this file because Chicken 4 or later
+;; doesn't support syntax-case. If we find a bug of this
+;; implementation, we need to modify this file directly or use other
+;; implementation.
+;; See also: https://github.com/uim/uim/issues/26
+
 (define expanded:json-parser
   ((lambda ()
      (let ((any.1539 'undefined)
